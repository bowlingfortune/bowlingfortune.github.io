(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))t(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&t(a)}).observe(document,{childList:!0,subtree:!0});function o(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function t(s){if(s.ep)return;s.ep=!0;const r=o(s);fetch(s.href,r)}})();const E=new Set([" ","	",",",";"]),F=new Set("0123456789-".split("")),N=new Set("0123456789-X/".split(""));function $(e){return E.has(e)}function h(e){const{line:n}=e;for(;e.index<n.length&&$(n[e.index]);)e.index+=1;if(e.index>=n.length)return null;const o=e.index+1,t=n[e.index].toUpperCase();return e.index+=1,{char:t,column:o}}function p(e){if(e==="X")return 10;if(e==="-")return 0;const n=Number.parseInt(e,10);if(Number.isNaN(n))throw new Error(`Invalid roll symbol '${e}'`);if(n<0||n>9)throw new Error(`Invalid roll value '${e}'`);return n}function X(e){return e==="X"||F.has(e)}function v(e){return N.has(e)}function m(e,n,o){return{symbol:e,value:n,column:o}}function P(e){const n=[],o={line:e,index:0},t=()=>{for(;o.index<e.length&&$(e[o.index]);)o.index+=1};for(let r=0;r<9;r+=1){if(t(),o.index>=e.length)return{kind:"error",message:`Expected frame ${r+1}, but the line ended early`,column:e.length+1};const a=h(o);if(!a)return{kind:"error",message:`Expected frame ${r+1}, but found nothing`,column:e.length+1};const{char:i,column:l}=a;if(!X(i))return{kind:"error",message:`Invalid roll '${i}' in frame ${r+1}`,column:l};if(i==="X"){n.push({rolls:[m("X",10,l)],isStrike:!0,isSpare:!1});continue}const c=p(i),b=h(o);if(!b)return{kind:"error",message:`Frame ${r+1} is missing a second roll`,column:e.length+1};const{char:d,column:u}=b;if(d==="X")return{kind:"error",message:`Strike symbol not allowed in second roll of frame ${r+1}`,column:u};if(d==="/"){if(c>=10)return{kind:"error",message:`Spare in frame ${r+1} requires the first roll to be less than 10`,column:u};const w=10-c;n.push({rolls:[m(i,c,l),m("/",w,u)],isStrike:!1,isSpare:!0});continue}if(!F.has(d))return{kind:"error",message:`Invalid roll '${d}' in frame ${r+1}`,column:u};const k=p(d);if(c+k>10)return{kind:"error",message:`Pins knocked down exceed 10 in frame ${r+1}`,column:u};n.push({rolls:[m(i,c,l),m(d,k,u)],isStrike:!1,isSpare:!1})}if(t(),o.index>=e.length)return{kind:"error",message:"Frame 10 is missing",column:e.length+1};const s=T(o,e);return s.kind==="error"?s:(n.push(s.frame),t(),o.index<e.length?{kind:"error",message:"Too many rolls provided. Expected exactly 10 frames.",column:o.index+1}:{kind:"success",frames:n})}function T(e,n){const o=h(e);if(!o)return{kind:"error",message:"Frame 10 is missing",column:n.length+1};const{char:t,column:s}=o;if(!X(t))return{kind:"error",message:`Invalid roll '${t}' in frame 10`,column:s};if(t==="X")return V(e,s);const r=p(t),a=h(e);if(!a)return{kind:"error",message:"Frame 10 is missing a second roll",column:n.length+1};const{char:i,column:l}=a;if(i==="X")return{kind:"error",message:"Strike symbol not allowed as the second roll unless the first was a strike",column:l};if(i==="/"){if(r>=10)return{kind:"error",message:"Spare in frame 10 requires the first roll to be less than 10",column:l};const b=10-r,d=h(e);if(!d)return{kind:"error",message:"A bonus ball is required after a spare in frame 10",column:n.length+1};const{char:u,column:k}=d;if(u==="/")return{kind:"error",message:"Spare symbol cannot be used for the fill ball after a spare",column:k};if(!v(u))return{kind:"error",message:`Invalid fill ball '${u}' in frame 10`,column:k};const w=u==="X"?10:p(u);return{kind:"success",frame:{rolls:[m(t,r,s),m("/",b,l),m(u,w,k)],isStrike:!1,isSpare:!0}}}if(!F.has(i))return{kind:"error",message:`Invalid roll '${i}' in frame 10`,column:l};const c=p(i);return r+c>10?{kind:"error",message:"Pins knocked down exceed 10 in frame 10",column:l}:{kind:"success",frame:{rolls:[m(t,r,s),m(i,c,l)],isStrike:!1,isSpare:!1}}}function V(e,n){const o=h(e);if(!o)return{kind:"error",message:"A strike in frame 10 requires two additional rolls",column:n};const{char:t,column:s}=o;if(!v(t)||t==="/")return{kind:"error",message:"Invalid second roll after a strike in frame 10",column:s};let r;t==="X"?r=10:r=p(t);const a=h(e);if(!a)return{kind:"error",message:"A strike in frame 10 requires two additional rolls",column:s};const{char:i,column:l}=a;if(!v(i))return{kind:"error",message:`Invalid fill ball '${i}' in frame 10`,column:l};let c;if(i==="X")c=10;else if(i==="/"){if(t==="X")return{kind:"error",message:"Spare symbol cannot follow a strike in the second roll of frame 10",column:l};if(r>=10)return{kind:"error",message:"Spare symbol invalid because there are no pins remaining",column:l};c=10-r}else if(c=p(i),t!=="X"&&r+c>10)return{kind:"error",message:"Pins knocked down exceed the remaining pins in frame 10",column:l};return{kind:"success",frame:{rolls:[m("X",10,n),m(t,r,s),m(i,c,l)],isStrike:!0,isSpare:!1}}}function M(e){const n=[],o=[],t=[];for(const a of e){for(const i of a.rolls)n.push(i.value);o.push(a.isStrike),t.push(a.isSpare)}let s=0,r=0;for(let a=0;a<10;a+=1)o[a]?(s+=10+(n[r+1]??0)+(n[r+2]??0),r+=1):t[a]?(s+=10+(n[r+2]??0),r+=2):(s+=(n[r]??0)+(n[r+1]??0),r+=2);return s}const I=["Tell My Bowling Fortune","Glimpse Into My Future.. er, Past","Peer Into the Multiverse","Clutch Or Not?"],q="Tell Me How Bad I Fucked Up",O=.001,C=document.querySelector("#app");if(!C)throw new Error("Failed to find app container");C.innerHTML=`
  <h1>Bowling Fortune Teller</h1>
  <label for="scores-input">Frame-by-Frame Score(s)</label>
  <textarea id="scores-input" name="Frame-by-Frame Score(s)" placeholder="9/ X 81 7/ X X 9- 90 X XX6" aria-describedby="scores-help" rows="15" cols="50"></textarea>
  <p id="scores-help" class="description">
    Enter frame-by-frame scores. Use spaces or commas to separate frames.<br />
    Enter one game per line.<br />
    Valid characters:<br />
    * 0-9<br />
    * /<br />
    * X<br />
    * - (counts the same as 0)
  </p>
  <button id="submit" type="button">Tell My Bowling Fortune</button>
  <div id="feedback" role="status" aria-live="polite"></div>
`;const f=document.querySelector("#scores-input"),S=document.querySelector("#submit"),g=document.querySelector("#feedback");if(!f||!S||!g)throw new Error("Failed to initialise UI elements");let y=0;function R(){if(Math.random()<O){S.textContent=q;return}S.textContent=I[y],y=(y+1)%I.length}R();setInterval(R,4e3);S.addEventListener("click",()=>{if(!f.value.trim()){x("Please provide at least one game.",1,1);return}const e=f.value.replace(/\r/g,"").split(`
`),n=[];for(let o=0;o<e.length;o+=1){const t=e[o];if(!t.trim()){x(`Game ${o+1} is empty. Each line must contain exactly ten frames.`,o+1,1);return}const s=P(t);if(s.kind==="error"){A(s,o,e);return}const r=M(s.frames);n.push({frames:s.frames,score:r})}B(n)});function A(e,n,o){const t=n+1,s=`Row ${t}, column ${e.column}: ${e.message}`,r=L(o,n,e.column);x(s,t,e.column,r)}function L(e,n,o){let t=0;for(let s=0;s<n;s+=1)t+=e[s].length+1;return t+(o-1)}function x(e,n,o,t){if(g.innerHTML="",g.className="error",g.textContent=e,f.focus(),typeof t=="number")f.setSelectionRange(t,t);else{const s=f.value.replace(/\r/g,"").split(`
`),r=L(s,n-1,o);f.setSelectionRange(r,r)}}function B(e){if(g.className="output",e.length===0){g.innerHTML="";return}const n=e.map((o,t)=>`
        <article class="result-card">
          <h2>Game ${t+1}</h2>
          <p><strong>Final score:</strong> ${o.score}</p>
        </article>
      `).join("");g.innerHTML=`<section class="results">${n}</section>`}
